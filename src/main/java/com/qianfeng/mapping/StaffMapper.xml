<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qianfeng.dao.StaffMapper">
  <resultMap id="BaseResultMap" type="com.qianfeng.entity.Staff">
    <id column="no" jdbcType="VARCHAR" property="no" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="did" jdbcType="INTEGER" property="did" />
    <result column="flag" jdbcType="INTEGER" property="flag" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="createdate" jdbcType="DATE" property="createdate" />
    <result column="photo" jdbcType="VARCHAR" property="photo" />
  </resultMap>
  <sql id="Base_Column_List">
    no, name, did, flag, sex, email, qq, phone, createdate, photo
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_staff
    where no = #{no,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_staff
    where no = #{no,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.qianfeng.entity.Staff">
    insert into t_staff (no, name, did, 
      flag, sex, email, qq, 
      phone, createdate, photo
      )
    values (#{no,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{did,jdbcType=INTEGER}, 
      #{flag,jdbcType=INTEGER}, #{sex,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{createdate,jdbcType=DATE}, #{photo,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="addStaff" parameterType="com.qianfeng.entity.Staff">
    insert into t_staff
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="no != null">
        no,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="did != null">
        did,
      </if>
      <if test="flag != null">
        flag,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="qq != null">
        qq,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="createdate != null">
        createdate,
      </if>
      <if test="photo != null">
        photo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="no != null">
        #{no,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="did != null">
        #{did,jdbcType=INTEGER},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null">
        #{createdate,jdbcType=DATE},
      </if>
      <if test="photo != null">
        #{photo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qianfeng.entity.Staff">
    update t_staff
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="did != null">
        did = #{did,jdbcType=INTEGER},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null">
        createdate = #{createdate,jdbcType=DATE},
      </if>
      <if test="photo != null">
        photo = #{photo,jdbcType=VARCHAR},
      </if>
    </set>
    where no = #{no,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qianfeng.entity.Staff">
    update t_staff
    set name = #{name,jdbcType=VARCHAR},
      did = #{did,jdbcType=INTEGER},
      flag = #{flag,jdbcType=INTEGER},
      sex = #{sex,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      createdate = #{createdate,jdbcType=DATE},
      photo = #{photo,jdbcType=VARCHAR}
    where no = #{no,jdbcType=VARCHAR}
  </update>
  <!--额外添加-->

  <!--查询所有员工-->
  <select id="staffFindAll"   resultType="vstaff">
    select s.*, d.name deptName from t_staff s
    inner join t_depart d
    on s.did = d.id
    where s.flag = 1
  </select>

  <!--添加操作  (no, name, did, flag, sex, email, qq, phone, createdate, photo)-->
  <insert id="addStafff" parameterType="staff">
    insert into t_staff
    values (#{no}, #{name}, #{did}, 1, #{sex}, #{email}, #{qq}, #{phone}, #{createdate}, #{photo})
  </insert>
  <!--// 根据员工姓名查询数据-->
  <select id="findStaffByName" parameterType="String" resultType="staff">
    select <include refid="Base_Column_List" />
    from t_staff
    where name = #{name}
  </select>

  <!-- 修改操作 -->
  <select id="findStaffByNo" parameterType="String" resultType="staff">
    select s.name, s.did, s.sex, s.email, s.phone, s.qq, s.createdate, s.photo
    from t_staff s
    inner join t_depart d
    on s.did = d.id
    where s.no = #{no}
  </select>
  <update id="updateStaff" parameterType="staff">
    update t_staff set name=#{name},did=#{did},sex=#{sex},email=#{email},phone=#{phone},
    qq=#{qq},createdate=#{createdate},photo=#{photo}
    where no = #{no}
  </update>

  <!-- 员工删除 -->
  <update id="deleteStaffByNo" parameterType="String">
    update t_staff set flag = 2 where no=#{no}
  </update>

  <!--员工更改为有效-->
  <update id="updateStaffFlag" parameterType="staff">
    update t_staff set flag = 1 where no=#{no}
  </update>

  <!-- 查询所有招生老师 -->
  <select id="selectAllRecruiter" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from t_staff s where s.did=4
  </select>

  <!--批量导入-->
  <insert id="addBatch" parameterType="list">
    insert into t_staff
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.no}, #{item.name}, #{item.did}, #{item.flag}, #{item.sex}, #{item.email}, #{item.qq}, #{item.phone}, #{item.createdate}, #{item.photo})
    </foreach>
  </insert>
</mapper>